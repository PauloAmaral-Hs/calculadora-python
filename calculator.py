import tkinter as tknfrom tkinter import ttknimport mathnnclass Calculator:n    def __init__(self, root):n        self.root = rootn        self.root.title("Calculadora")n        self.root.geometry("400x600")n        self.root.resizable(False, False)n        n        # Variáveisn        self.current_number = ""n        self.first_number = 0n        self.operation = ""n        self.new_number = Truen        n        # Configurar estilon        style = ttk.Style()n        style.theme_use('clam')n        n        # Frame principaln        main_frame = ttk.Frame(root, padding="10")n        main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))n        n        # Displayn        self.display_var = tk.StringVar()n        self.display_var.set("0")n        n        display_frame = ttk.Frame(main_frame)n        display_frame.grid(row=0, column=0, columnspan=4, sticky=(tk.W, tk.E), pady=(0, 10))n        n        self.display = ttk.Entry(display_frame, textvariable=self.display_var, n                                font=('Arial', 24), justify='right', state='readonly')n        self.display.grid(row=0, column=0, sticky=(tk.W, tk.E), padx=5)n        n        # Botõesn        buttons = [n            ('C', 1, 0), ('±', 1, 1), ('%', 1, 2), ('÷', 1, 3),n            ('7', 2, 0), ('8', 2, 1), ('9', 2, 2), ('×', 2, 3),n            ('4', 3, 0), ('5', 3, 1), ('6', 3, 2), ('-', 3, 3),n            ('1', 4, 0), ('2', 4, 1), ('3', 4, 2), ('+', 4, 3),n            ('0', 5, 0, 2), ('.', 5, 2), ('=', 5, 3)n        ]n        n        for button in buttons:n            if len(button) == 4:  # Botão 0 que ocupa 2 colunasn                text, row, col, colspan = buttonn                btn = ttk.Button(main_frame, text=text, command=lambda t=text: self.button_click(t))n                btn.grid(row=row, column=col, columnspan=colspan, sticky=(tk.W, tk.E, tk.N, tk.S), n                        padx=2, pady=2)n            else:n                text, row, col = buttonn                btn = ttk.Button(main_frame, text=text, command=lambda t=text: self.button_click(t))n                btn.grid(row=row, column=col, sticky=(tk.W, tk.E, tk.N, tk.S), padx=2, pady=2)n        n        # Configurar pesos das linhas e colunasn        for i in range(6):n            main_frame.grid_rowconfigure(i, weight=1)n        for i in range(4):n            main_frame.grid_columnconfigure(i, weight=1)n    n    def button_click(self, value):n        if value.isdigit():n            self.handle_number(value)n        elif value == '.':n            self.handle_decimal()n        elif value in ['+', '-', '×', '÷']:n            self.handle_operator(value)n        elif value == '=':n            self.calculate()n        elif value == 'C':n            self.clear()n        elif value == '±':n            self.negate()n        elif value == '%':n            self.percentage()n    n    def handle_number(self, number):n        if self.new_number:n            self.current_number = numbern            self.new_number = Falsen        else:n            self.current_number += numbern        n        self.display_var.set(self.current_number)n    n    def handle_decimal(self):n        if '.' not in self.current_number:n            if self.new_number:n                self.current_number = "0."n                self.new_number = Falsen            else:n                self.current_number += "."n            self.display_var.set(self.current_number)n    n    def handle_operator(self, op):n        if self.current_number:n            if self.operation and not self.new_number:n                self.calculate()n            n            self.first_number = float(self.current_number)n            self.operation = opn            self.new_number = Truen    n    def calculate(self):n        if self.operation and self.current_number:n            second_number = float(self.current_number)n            n            if self.operation == '+':n                result = self.first_number + second_numbern            elif self.operation == '-':n                result = self.first_number - second_numbern            elif self.operation == '×':n                result = self.first_number * second_numbern            elif self.operation == '÷':n                if second_number == 0:n                    self.display_var.set("Erro")n                    returnn                result = self.first_number / second_numbern            n            # Formatar resultadon            if result.is_integer():n                result = int(result)n            else:n                result = round(result, 10)n            n            self.display_var.set(str(result))n            self.current_number = str(result)n            self.operation = ""n            self.new_number = Truen    n    def clear(self):n        self.current_number = ""n        self.first_number = 0n        self.operation = ""n        self.new_number = Truen        self.display_var.set("0")n    n    def negate(self):n        if self.current_number and self.current_number != "0":n            if self.current_number.startswith('-'):n                self.current_number = self.current_number[1:]n            else:n                self.current_number = '-' + self.current_numbern            self.display_var.set(self.current_number)n    n    def percentage(self):n        if self.current_number:n            try:n                number = float(self.current_number)n                result = number / 100n                if result.is_integer():n                    result = int(result)n                else:n                    result = round(result, 10)n                n                self.current_number = str(result)n                self.display_var.set(self.current_number)n            except ValueError:n                passnndef main():n    root = tk.Tk()n    app = Calculator(root)n    root.mainloop()nnif __name__ == "__main__":n    main()